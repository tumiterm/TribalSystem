@model CMS.App_Start.Dweller

<link href="~/Content/StyleForm.css" rel="stylesheet" />
<link href="~/Content/bootstrap-chosen.css" rel="stylesheet" />


@Scripts.Render("~/bundles/modernizr")

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>

<style>
    #HeadsmenId, #VillageId, #inputName, #inputSurname,
    #inputGender, #inputRace, #inputIdNum, #inputCell, #inputMail, #postalRes, #postalPostal,
    #EducationId, #WorkTypeId, #IncomeSourceId {
        border-color: #000000;
    }
</style>

@using (Html.BeginForm("RegisterDweller", "Dweller", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <nav class="nav nav-tabs">
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active " id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Property Information</a>
            <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Applicant Demographic Profile</a>
            <a class="nav-item nav-link" id="nav-contact-tab" data-toggle="tab" href="#nav-contact" role="tab" aria-controls="nav-contact" aria-selected="false">Spousal Details</a>
            <a class="nav-item nav-link" id="nav-edu-tab" data-toggle="tab" href="#nav-edu" role="tab" aria-controls="nav-edu" aria-selected="false">Employment & Educational Details </a>
        </div>

    </nav>
    
    <a href="~/Dweller/DwellerCollection" class="btn btn-success float-right"><i class="fa fa-home">View Dweller</i></a>

    <div class="note mt-3 mb-3">
        <p>Dweller Registration Information</p>
    </div>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <div class="col-xl-12 col-md-12">

                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="container register-form">

                        <a href="#" class="badge badge-primary">Residential Address</a>
                        <a href="#" class="badge badge-primary float-right">Postal Address</a>
                        <div class="form-row">
                            <div class="form-group col-md-4 mt-1">
                                @Html.EditorFor(model => model.AddressLine1, "Address Line 1", new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = @Html.DisplayNameFor(m => m.AddressLine1), @id = "addrLine1Res" } })
                            </div>

                            <div class="form-group col-md-4">
                                <div class="form-check ml-5">
                                    <input class="form-check-input" type="checkbox" value="" id="chkFillAddress" name="chkFillAddress">
                                    <label class="form-check-label text-danger" for="chkFillAddress">
                                        Same As Residential?
                                    </label>
                                </div>
                            </div>

                            <div class="form-group col-md-4 mt-1">
                                <input type="text" placeholder="Address Line 1" id="addrLine1Pos" class="form-control" />
                            </div>


                            <div class="form-group col-md-4">
                                @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = @Html.DisplayNameFor(m => m.AddressLine2), @id = "addrLine2Res" } })
                            </div>

                            <div class="form-group col-md-4">
                            </div>

                            <div class="form-group col-md-4">
                                <input type="text" placeholder="Address Line 2" id="addrLine2Pos" class="form-control" />
                            </div>

                            <div class="form-group col-md-4">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @required = "required", placeholder = @Html.DisplayNameFor(m => m.City), @id = "cityRes" } })
                            </div>

                            <div class="form-group col-md-4">
                            </div>

                            <div class="form-group col-md-4">
                                <input type="text" placeholder="City" id="cityPos" class="form-control" />
                            </div>

                            <div class="form-group col-md-2">
                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", @type = "number", @required = "required", placeholder = @Html.DisplayNameFor(m => m.PostalCode), @id = "postalRes" } })
                            </div>

                            <div class="form-group col-md-8">
                            </div>

                            <div class="form-group col-md-2">
                                <input type="number" placeholder="Postal Code" id="postalPostal" class="form-control" />
                            </div>
                        </div>




                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label for="PropType">Applicable Village</label>
                                @Html.DropDownList("VillageId", null, htmlAttributes: new { @class = "form-control", @id = "VillageId" })
                            </div>
                            <div class="form-group col-md-4">
                                <label for="PropStatus">Applicable Headsmen</label>
                                @Html.DropDownList("HeadsmenId", null, htmlAttributes: new { @class = "form-control", @id = "HeadsmenId" })

                            </div>



                            <div class="form-group col-md-4">
                                <label for="HouseNum" id="houseId">PropertyAge</label>
                                @Html.DropDownList("PropertyAgeId", null, htmlAttributes: new { @class = "form-control", @id = "inputHeadsmen" })
                            </div>

                        </div>

                        <br /><br />




                    </div>

                </div>
            </div>

        </div>
        <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
            <div class="col-xl-12 col-md-12">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="container register-form">
                        <div class="form-row">

                            <div class="form-group col-md-4">
                                <label for="inputName">Full Name(s)</label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "inputName", @required = "required", placeholder = @Html.DisplayNameFor(m => m.Name) } })
                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputLastName">Last Name</label>
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @id = "inputSurname", @required = "required", placeholder = @Html.DisplayNameFor(m => m.LastName) } })
                            </div>

                            <div class="form-group col-md-4">
                                <label for="VillType">Gender</label>
                                @Html.DropDownList("GenderId", null, htmlAttributes: new { @class = "form-control chosen-select", @id = "inputGender" })


                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputCell">Race</label>
                                @Html.DropDownList("RaceId", null, htmlAttributes: new { @class = "form-control chosen-select", @id = "inputRace" })


                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Marital Status</label>
                                @Html.DropDownList("MaritalStatusId", null, htmlAttributes: new { @class = "form-control chosen-select", @id = "inputMarital" })
                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">ID Number</label>
                                @Html.EditorFor(model => model.ID_Number, new { htmlAttributes = new { @class = "form-control", @type = "number", @id = "inputIdNum", @required = "required", @maxlength = 13, placeholder = @Html.DisplayNameFor(m => m.ID_Number) } })
                            </div>

                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Cellphone Number</label>
                                @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control", @id = "inputCell", @required = "required", @type = "number", placeholder = @Html.DisplayNameFor(m => m.Cellphone) } })
                            </div>


                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Alternative Cellphone</label>
                                @Html.EditorFor(model => model.Cellphone2, new { htmlAttributes = new { @class = "form-control", @id = "inputCell", @required = "required", @type = "number", placeholder = @Html.DisplayNameFor(m => m.Cellphone2) } })
                            </div>


                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Email Address</label>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @id = "inputMail" } })
                            </div>


                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Disability</label>
                                @Html.DropDownList("DisabilityId", null, htmlAttributes: new { @class = "form-control chosen-select", @id = "inputDis" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">
            <div class="col-xl-12 col-md-12">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="container register-form">
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label for="inputRoomNum">Spouse Name</label>
                                @Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control", @id = "inputSpouseName", @required = "required", placeholder = @Html.DisplayNameFor(m => m.SpouseName) } })
                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputRoomNum">Spouse Last Name</label>
                                @Html.EditorFor(model => model.SpouseLastName, new { htmlAttributes = new { @class = "form-control", @id = "inputSpouseSurname", @required = "required", placeholder = @Html.DisplayNameFor(m => m.SpouseLastName) } })
                            </div>
                            <div class="form-group col-md-6">
                                <label for="inputRoomNum">Relationship</label>
                                @Html.DropDownList("RelationshipId", null, htmlAttributes: new { @class = "form-control", @id = "inputRel" })
                            </div>

                            <div class="form-group col-md-" style="color:lightblue">
                                <label>Spouse Cellphone Number</label>
                                @Html.EditorFor(model => model.SpouseCell, new { htmlAttributes = new { @class = "form-control", @type = "number", @id = "inputSpouCell", @required = "required", placeholder = @Html.DisplayNameFor(m => m.SpouseCell) } })
                            </div>

                        </div>

                    </div>
                    <br />
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="nav-edu" role="tabpanel" aria-labelledby="nav-edu-tab">
            <div class="col-xl-12 col-md-12">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="container register-form">
                        <div class="row">
                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Occupation</label>
                                @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control", @id = "inputOcc", @required = "required", placeholder = @Html.DisplayNameFor(m => m.Occupation) } })
                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Employer</label>
                                @Html.EditorFor(model => model.EmployerName, new { htmlAttributes = new { @class = "form-control", @id = "inputEmployer", @required = "required", placeholder = @Html.DisplayNameFor(m => m.EmployerName) } })
                            </div>
                            <div class="form-group col-md-4">
                                <label for="inputRoomNum">Income Source</label>
                                @Html.DropDownList("IncomeSourceId", null, htmlAttributes: new { @class = "form-control chosen-select", @id = "inputIncome" })
                            </div>


                            <div class="form-group col-md-4" style="color:lightblue">
                                <label>Business Activity</label>
                                @Html.EditorFor(model => model.BusinessActivity, new { htmlAttributes = new { @class = "form-control", @id = "inputBus", @required = "required", placeholder = @Html.DisplayNameFor(m => m.BusinessActivity), } })
                            </div>

                            <div class="form-group col-md-6">
                                <label for="inputIncome">Work Type (If Employed)</label>
                                @Html.DropDownList("WorkTypeId", ViewBag.WorkTypeId as SelectList, htmlAttributes: new { @class = "form-control" })
                            </div>

                            <div class="form-group col-md-6">
                                <label for="inputIncome">Education</label>
                                @Html.DropDownList("EducationId", null, htmlAttributes: new { @class = "form-control chosen-select", @id = "inputIncome" })
                            </div>

                        </div>

                        <div class="form-group col-md-3 mt-3">
                            <label for="isActive">Is Active</label>
                            @Html.EditorFor(model => model.IsActive, new { @id = "isActive" })
                        </div>
                        <div style="background-color:whitesmoke" class="mt-3 pull-right">
                            <button type="submit" id="btnSubmit" value="Create" onclick="return validateData()" class="btn btn-outline-success pull-right"><i class="fa fa-user-plus"></i> Register Dweller </button>
                            @*@Html.ActionLink(" Proof of Residence", "DwellerReports", new { ReportType = "PDF", @id = Model.Id }, new { @class = "btn btn-outline-danger fa fa-file-pdf" })
                                @Html.ActionLink(" Add Beneficiary", "RegisterBeneficiary", "Beneficiary", new { @dwellerId = Model.Id }, new { @class = "btn btn-outline-secondary float-right fa fa-user" })
                                @Html.ActionLink(" View Beneficiary", "ListBeneficiaryById", "Beneficiary", new { @benID = Model.Id }, new { @class = "btn btn-outline-warning mr-1 float-right fa fa-eye" })*@
                        </div>
                    </div>
                    <br />
                </div>
            </div>
        </div>
    </div>

    @section scripts{
        <script>

            $(function () {

                $("#dwellerId").chosen();
                $("#municipalityId").chosen();



                $("#btnSubmit").click(function () {

                    if ($("#name").val() == "") {
                        swal("Dweller Registration", "Error: Owner Full Name Required!", "error");
                        return false;


                    }

                    if ($("#houseNo").val() == "") {
                        swal("Dweller Registration", "Error: House Number required!", "error");
                        return false;

                    }
                    if ($("#propSize").val() == "") {
                        swal("Dweller Registration", "Error: Property Size Required!", "error");
                        return false;

                    }

                    if ($("#LName").val() == "") {
                        swal("Dweller Registration", "Error: Owner Last Name is a required field!", "error");
                        return false;
                    }

                    if ($("#municipality").val() == "") {
                        swal("Dweller Registration", "Error: Owner Last Name is a required field!", "error");
                        return false;
                    }

                    if ($("#cell").val() == "") {
                        swal("Dweller Registration", "Error: Owner Cellphone Number is a required field!", "error");
                        return false;
                    }

                    if ($("#ownerID").val() == "") {
                        swal("Dweller Registration", "Error: Owner ID Number/Passport Number is a required field!", "error");
                        return false;
                    }
                    else {
                        swal("Dweller Registration", "Dweller Successfully Updated", "success");
                        return true;
                    }

                });

                function isValidEmail() {

                    var emailId = $("#inputMail").val();
                    atpos = emailId.indexOf("@@");
                    dotpos = emailId.lastIndexOf(".");

                    if (atpos < 1 || (dotpos - atpos < 2)) {
                        swal("Property Registration!", "Error: Error: Email Invalid!", "error");
                        return false;
                    }
                    return (true);
                }

                $(document).ready(function () {

                    $('#propertyTypeId').on('change', function () {
                        var selectedItem = $("#propertyTypeId").find('option:selected').text();

                        if (selectedItem == 'Commercial') {
                            $("#houseId").text('Prop Number (Commercial)');
                            $("#amount").prop("disabled", false);
                            return;
                        }
                        if (selectedItem == 'Stand') {

                            $("#houseId").text('Stand Number');
                            $("#amount").prop("disabled", true);
                            $("#amount").prop("hide", true);

                            return;
                        }
                        if (selectedItem == 'Plot') {
                            $("#houseId").text('Plot Number');
                            $("#amount").prop("disabled", false);
                            return;
                        }
                        if (selectedItem == 'Agricultural Land') {
                            $("#houseId").text('Landmark Number');
                            $("#amount").prop("disabled", false);
                            return;
                        }
                        else {
                            $("#houseId").text('House Number');
                            $("#amount").prop("disabled", false);
                            return;
                        }
                    });

                });


            });



            $(document).ready(function () {
                $("#chkFillAddress").on("click", function () {
                    if (this.checked) {
                        $("#addrLine1Pos").val($("#addrLine1Res").val());
                        $("#addrLine2Pos").val($("#addrLine2Res").val());
                        $("#cityPos").val($("#cityRes").val());
                        $("#postalPostal").val($("#postalRes").val());
                    } else {
                        $("#addrLine1Res").val('');
                        $("#addrLine2Res").val('');
                        $("#cityRes").val('');
                        $("#postalRes").val('');
                    }
                });
            });


        </script>
    }
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
}


