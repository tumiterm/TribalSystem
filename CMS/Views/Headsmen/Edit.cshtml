@model CMS.App_Start.Headsman



@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <link href="~/Content/StyleForm.css" rel="stylesheet" />

    <link href="~/Content/bootstrap-chosen.css" rel="stylesheet" />

    @Scripts.Render("~/bundles/modernizr")

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>

</head>


@using (Html.BeginForm("Edit", "Headsmen", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <button type="button" class="btn btn-success float-right"><i class="fa fa-male"></i> Add New Headsmen</button>


    <div class="container register-form">
        <div class="form">
            <div class="note">
                <p>Modify Headsman Details</p>
            </div>
            <br />
            <div class="col-xl-12 col-md-12 mb-4">
                <div class="card border-left-primary shadow h-100 py-2">
                    <div class="card-body">

                        <form>

                            @Html.HiddenFor(model => model.Id)

                            <div style="background-color:whitesmoke" class="mt-3 pull-right ml-1 mr-1">

                                <div class="form-group col-md-6">
                                    <label for="inputProvince">User Title</label>
                                    @Html.DropDownList("TitleId", null, htmlAttributes: new { @class = "form-control" })
                                </div>

                                <div class="form-check">
                                    @Html.EditorFor(model => model.IsActive)
                                    <label class="form-check-label" for="defaultCheck2">
                                        Is Active
                                    </label>

                                </div>
                            </div>

                                <div class="form-row">


                                    <div class="form-group col-md-6">
                                        <label for="inputName">Full Name(s)</label>
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

                                    </div>

                                    <div class="form-group col-md-6">
                                        <label for="inputSection">Last Name</label>
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })

                                    </div>

                                </div>
                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="inputProvince">Applicable Village</label>
                                        @Html.DropDownList("VillageId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label for="inputCountry">Province</label>
                                        @Html.DropDownList("ProvinceId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-6">
                                        <label for="inputWard">Country</label>
                                        @Html.DropDownList("CountryId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                    <div class="form-group col-md-6">
                                        <label for="inputWard">Tribe</label>
                                        @Html.DropDownList("TribeId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-3">
                                        <label for="inputWard">Clan</label>
                                        @Html.DropDownList("ClanId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                    <div class="form-group col-md-3">
                                        <label for="inputWard">Gender</label>
                                        @Html.DropDownList("GenderId", null, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                    <div class="form-group col-md-3">
                                        <label for="inputWard">Cellphone</label>
                                        @Html.EditorFor(model => model.Cellphone, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                    <div class="form-group col-md-3">
                                        <label for="inputWard">Alternative Cell</label>
                                        @Html.EditorFor(model => model.Cellphone2, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                </div>

                                <div class="form-row">
                                    <div class="form-group col-md-4">
                                        <label for="inputWard">Email</label>
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                    <div class="form-group col-md-8">
                                        <label for="inputWard">Address</label>
                                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                </div>

                                <button type="submit" onclick="return validateData()" id="btnSubmit" value="Submit" class="btn btn-outline-success"><i class="fa fa-save"></i> Save </button>
                                <button type="button" id="btnReset" class="btn btn-outline-warning pull-right"><i class="fa fa-redo"></i> Reset</button>
</form>

                    </div>
                </div>
            </div>
            <br />


            @section scripts{
                <script>
                        $(function () {

                            $("#inputChief").chosen();
                            $("#inputProvince").chosen();
                            $("#inputCountry").chosen();


                            ////Basic functionality
                            $("#btnSubmit").click(function () {

                                if ($("#inputName").val() == "") {
                                    swal("Village Registration!", "Error: Village Name is Required!", "error");
                                    return false;

                                } if ($("#inputVillage").val() == "") {
                                    swal("Village Registration!", "Error: Village Location is a required field!", "error");
                                    return false;

                                }
                                else {
                                    swal("Village Registration", "Village Added Successfully", "success");
                                    return true;
                                }

                            });


                        });
                </script>
            }
            <script src="~/Scripts/jquery-3.4.1.min.js"></script>
            @Scripts.Render("~/bundles/jquery")
            @Scripts.Render("~/bundles/bootstrap")

        </div>
    </div>


}
</html>







